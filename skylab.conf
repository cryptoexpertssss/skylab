#!/bin/bash
# SkyLab Configuration File
# This file contains configurable parameters for the SkyLab installation script

# =============================================================================
# GENERAL SETTINGS
# =============================================================================

# Script metadata
SCRIPT_NAME="SkyLab Home Lab Setup"
SCRIPT_VERSION="2.0.0"
SCRIPT_AUTHOR="SkyLab Team"

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log file settings
LOG_DIR="/var/log/skylab"
LOG_FILE="$LOG_DIR/skylab-$(date +%Y%m%d-%H%M%S).log"
LOG_LEVEL="INFO"  # DEBUG, INFO, WARN, ERROR
LOG_MAX_SIZE="10M"  # Maximum log file size
LOG_RETENTION_DAYS=30  # Days to keep old log files

# =============================================================================
# SYSTEM REQUIREMENTS
# =============================================================================

# Minimum system requirements
MIN_MEMORY_GB=2
MIN_DISK_GB=10
REQUIRED_ARCH="x86_64"

# Health check thresholds
DISK_USAGE_THRESHOLD=85  # Percentage
MEMORY_USAGE_THRESHOLD=90  # Percentage
LOAD_AVERAGE_THRESHOLD=4.0  # System load average
MAX_ZOMBIE_PROCESSES=5  # Maximum allowed zombie processes

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

# Download settings
DOWNLOAD_TIMEOUT=300  # Seconds
RETRY_ATTEMPTS=3
RETRY_DELAY=5  # Seconds between retries

# Mirror URLs (primary and fallback)
GITHUB_MIRROR="https://github.com"
GITHUB_PROXY="https://ghproxy.com/https://github.com"
DOCKER_MIRROR="https://download.docker.com"

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Docker settings
DOCKER_VERSION="latest"
DOCKER_COMPOSE_VERSION="v2.24.0"
DOCKER_DATA_ROOT="/var/lib/docker"
DOCKER_LOG_DRIVER="json-file"
DOCKER_LOG_MAX_SIZE="10m"
DOCKER_LOG_MAX_FILE="3"

# =============================================================================
# SERVICE CONFIGURATION
# =============================================================================

# =============================================================================
# APPLICATION DATA DIRECTORIES
# =============================================================================

# Base directory for all application data
APP_DATA_BASE_DIR="/data/appdata"

# Filebrowser settings
FILEBROWSER_PORT=8080
FILEBROWSER_DATA_DIR="${APP_DATA_BASE_DIR}/filebrowser/data"
FILEBROWSER_CONFIG_DIR="${APP_DATA_BASE_DIR}/filebrowser/config"
FILEBROWSER_DEFAULT_USER="admin"
FILEBROWSER_DEFAULT_PASS="admin"

# AdGuard Home settings
ADGUARD_PORT=3000
ADGUARD_DNS_PORT=53
ADGUARD_DATA_DIR="${APP_DATA_BASE_DIR}/adguard/data"
ADGUARD_CONFIG_DIR="${APP_DATA_BASE_DIR}/adguard/config"
ADGUARD_WORK_DIR="${APP_DATA_BASE_DIR}/adguard/work"
ADGUARD_VERSION="latest"

# Watchtower settings
WATCHTOWER_SCHEDULE="0 0 4 * * *"  # Daily at 4 AM
WATCHTOWER_CLEANUP=true
WATCHTOWER_NOTIFICATIONS=false

# LazyDocker settings
LAZYDOCKER_VERSION="latest"
LAZYDOCKER_CONFIG_DIR="$HOME/.config/lazydocker"

# =============================================================================
# PACKAGE DEPENDENCIES
# =============================================================================

# Core system packages (space-separated)
CORE_PACKAGES="curl wget git unzip tar gzip"
NETWORK_PACKAGES="net-tools dnsutils iputils-ping"
SYSTEM_PACKAGES="btop screenfetch iotop lsof psmisc"
DEVEL_PACKAGES="build-essential software-properties-common"
# DOCKER_TOOLS="" # Docker tools are installed separately via dedicated functions

# Optional packages
OPTIONAL_PACKAGES="vim nano tree ncdu"

# =============================================================================
# USB AUTO-MOUNTING CONFIGURATION
# =============================================================================

# USB mounting settings
USB_MOUNT_POINT="/media"
USB_MOUNT_OPTIONS="nosuid,nodev,noatime"
USB_USER="devmon"
USB_GROUP="plugdev"

# Udevil configuration
UDEVIL_CONF_PATH="/etc/udevil/udevil.conf"
DEVMON_CONF_PATH="/etc/conf.d/devmon"

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# Security configurations
ENABLE_FIREWALL=true
FIREWALL_ALLOWED_PORTS="22 53 80 443 3000 8080"
ENABLE_FAIL2BAN=false
SSH_KEY_TYPE="ed25519"

# =============================================================================
# BACKUP AND RECOVERY
# =============================================================================

# Backup settings
BACKUP_DIR="${APP_DATA_BASE_DIR}/skylab/backups"
BACKUP_RETENTION_DAYS=7
AUTO_BACKUP=true
BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM

# =============================================================================
# MONITORING AND ALERTS
# =============================================================================

# Monitoring settings
ENABLE_MONITORING=true
MONITORING_INTERVAL=300  # Seconds
ALERT_EMAIL=""
ALERT_WEBHOOK=""

# Health check intervals
HEALTH_CHECK_INTERVAL=3600  # Seconds (1 hour)
SERVICE_CHECK_INTERVAL=300   # Seconds (5 minutes)

# =============================================================================
# DEVELOPMENT AND DEBUG
# =============================================================================

# Debug settings
DEBUG_MODE=false
VERBOSE_OUTPUT=false
DRY_RUN=false
SKIP_CONFIRMATIONS=false

# Development settings
DEV_MODE=false
USE_LOCAL_REPOS=false
LOCAL_REPO_PATH="${APP_DATA_BASE_DIR}/skylab/repos"

# =============================================================================
# CUSTOM EXTENSIONS
# =============================================================================

# Custom script hooks
PRE_INSTALL_HOOK=""
POST_INSTALL_HOOK=""
PRE_SERVICE_HOOK=""
POST_SERVICE_HOOK=""

# Additional services to install (space-separated)
ADDITIONAL_SERVICES=""

# Custom Docker images
CUSTOM_IMAGES=""

# =============================================================================
# ENVIRONMENT OVERRIDES
# =============================================================================

# Allow environment variables to override config values
# Format: SKYLAB_<CONFIG_NAME>=<value>
# Example: SKYLAB_LOG_LEVEL=DEBUG

# Function to load environment overrides
load_env_overrides() {
    local config_vars
    config_vars=$(set | grep '^[A-Z_]*=' | cut -d'=' -f1)
    
    for var in $config_vars; do
        local env_var="SKYLAB_$var"
        if [[ -n "${!env_var:-}" ]]; then
            declare -g "$var"="${!env_var}"
            echo "Override: $var=${!env_var}"
        fi
    done
}

# =============================================================================
# VALIDATION FUNCTIONS
# =============================================================================

# Validate configuration values
validate_config() {
    local errors=0
    
    # Validate numeric values
    if ! [[ "$MIN_MEMORY_GB" =~ ^[0-9]+$ ]] || [[ "$MIN_MEMORY_GB" -lt 1 ]]; then
        echo "Error: MIN_MEMORY_GB must be a positive integer"
        ((errors++))
    fi
    
    if ! [[ "$MIN_DISK_GB" =~ ^[0-9]+$ ]] || [[ "$MIN_DISK_GB" -lt 5 ]]; then
        echo "Error: MIN_DISK_GB must be at least 5"
        ((errors++))
    fi
    
    # Validate percentage values
    for threshold in DISK_USAGE_THRESHOLD MEMORY_USAGE_THRESHOLD; do
        local value="${!threshold}"
        if ! [[ "$value" =~ ^[0-9]+$ ]] || [[ "$value" -lt 1 ]] || [[ "$value" -gt 100 ]]; then
            echo "Error: $threshold must be between 1 and 100"
            ((errors++))
        fi
    done
    
    # Validate ports
    for port in FILEBROWSER_PORT ADGUARD_PORT; do
        local value="${!port}"
        if ! [[ "$value" =~ ^[0-9]+$ ]] || [[ "$value" -lt 1024 ]] || [[ "$value" -gt 65535 ]]; then
            echo "Error: $port must be between 1024 and 65535"
            ((errors++))
        fi
    done
    
    # Validate DNS port (can be privileged)
    if ! [[ "$ADGUARD_DNS_PORT" =~ ^[0-9]+$ ]] || [[ "$ADGUARD_DNS_PORT" -lt 1 ]] || [[ "$ADGUARD_DNS_PORT" -gt 65535 ]]; then
        echo "Error: ADGUARD_DNS_PORT must be between 1 and 65535"
        ((errors++))
    fi
    
    return $errors
}

# =============================================================================
# CONFIGURATION LOADING
# =============================================================================

# Load environment overrides if function exists
if declare -f load_env_overrides >/dev/null; then
    load_env_overrides
fi

# Export all configuration variables
set -a
# Configuration variables are already set above
set +a

echo "SkyLab configuration loaded successfully"